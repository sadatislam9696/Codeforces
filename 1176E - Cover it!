/***   Bismillahir Rahmanir Rahim   ***/

#include<bits/stdc++.h>
using namespace std;

#define     nn          '\n'
#define     ss          second
#define     ff          first
#define     sp(d, n)    fixed << setprecision(d) << n
#define     srt(v)      sort(v.begin(),v.end());
#define     rsrt(v)     sort(v.rbegin(),v.rend());
#define     rev(v)      reverse(v.begin(),v.end());
#define     mem(a, x)   memset(a, x, sizeof a)

using ll =  long long;
using ld =  long double;
using ull = unsigned long long;
const ld pi = acos(-1.0);
template <typename T>
using minHeap = priority_queue<T, vector<T>, greater<T>>;

int dx[6] = {0, 1, -1, 0, 0};
int dy[6] = {0, 0, 0, 1, -1};

const int M = 1e9 + 7;
const int N = 1e3 + 9;

bool vis[N];
int dis[N];
vector<int>adj[N];
void bfs(int s){
    queue<int>q;
    q.push(s);
    dis[s] = 0, vis[s] = 1;

    while(!q.empty()){
        int u = q.front();
        vis[u] = 1;
        q.pop();

        for(auto v : adj[u]){
            if(!vis[v]){
                dis[v] = dis[u] + 1;
                q.push(v);
            }
        }
    }
}
void solution(){
   int n, m; 
   cin >> n >> m; 

   for(int i = 1; i <= m; i++){
     int u, v; 
     cin >> u >> v; 
     adj[u].push_back(v);
     adj[v].push_back(u);
   }

   bfs(1);

   vector<int>odd, even;
   for(int i = 1; i <= n; i++){
     //cout << dis[i] << ' ';
     if(dis[i] & 1)odd.push_back(i);
     else even.push_back(i);
   }

   if(odd.size() < even.size()){
     cout << odd.size() << nn;
     for(auto it : odd){
        cout << it << ' ';
     }
   }
   else{
     cout << even.size() << nn;
     for(auto it : even){
        cout << it << ' ';
     }
   } cout << nn;

   for(int i = 1; i <= n; i++){
     adj[i].clear();
     vis[i] = 0;
     dis[i] = 0;
   }
}
int32_t main(){

    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);cout.tie(nullptr);

    int t = 1, c = 1;
    cin >> t;
    //cin.ignore();
    while(t--){
        //cout << "Case " << c++ << ": ";
        solution();
    }
    return 0;
}

